pipeline:
  name: my-pipe
  identifier: mypipe
  projectIdentifier: kubenetes_project
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: Email Start
        identifier: stage1
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: Shell Script_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: echo "The pipeline is started"
                    environmentVariables: []
                    outputVariables: []
                    delegateSelectors:
                      - kubernetes-delegate
                  timeout: 10m
                  failureStrategies: []
        tags: {}
    - stage:
        name: Build
        identifier: Build
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: JenkinsBuild
                  name: Jenkins Build_1
                  identifier: JenkinsBuild_1
                  spec:
                    connectorRef: Jenkins
                    jobName: git
                    jobParameter: []
                    delegateSelectors: []
                    unstableStatusAsSuccess: false
                    useConnectorUrlForJobExecution: false
                  timeout: 1m
        tags: {}
    - stage:
        name: build 2
        identifier: build_2
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: GitClone
                  name: Git Clone_1
                  identifier: GitClone_1
                  spec:
                    connectorRef: mygitdelegatetoken
                    repoName: harness
                    build:
                      type: branch
                      spec:
                        branch: main
                  failureStrategies: []
        variables: []
  delegateSelectors:
    - kubernetes-delegate
  notificationRules:
    - name: gen-notification
      identifier: gennotification
      pipelineEvents:
        - type: PipelineStart
        - type: PipelineEnd
      notificationMethod:
        type: Email
        spec:
          userGroups: []
          recipients:
            - joyboy3474@gmail.com
      enabled: true
  properties:
    ci:
      codebase:
        connectorRef: mygitdelegatetoken
        repoName: .harness/yaml
        build: <+input>
